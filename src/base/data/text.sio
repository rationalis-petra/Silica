(module string
  (export Text ⋅))

(Text ⮜ is τ (native ⟦(cl:simple-array cl:character)⟧))
(Text ≜ native ⟦(cl:simple-array cl:character)⟧)

((⋅) ⮜ Text → Text → Text)
((x ⋅ y) ≜ lisp Text (x y) ⟦(cl:concatenate 'string sym::|x| sym::|y|)⟧)
